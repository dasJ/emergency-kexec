#!/usr/bin/env bash

set -euo pipefail

if [ "${#}" != 1 ]; then
	(
		echo "Usage: ${0} <connectTo>"
		echo
		echo 'connectTo is an SSH connection string'
	) >&2
	exit 1
fi

#####
# Variables
#####

connectTo="${1}"

sshDir="/run/user/$(id -u)/helsinki-ssh"
# shellcheck disable=SC2174
mkdir -m 0700 -p "${sshDir}"
sshFlags=(-o 'ControlMaster=auto' -o "ControlPath=${sshDir}/%r@%h:%p" -o 'ControlPersist=1h' "${connectTo}")
ssh="ssh ${connectTo} ${sshFlags[*]}"

#####
# kexec image
#####

nix build -f '<nixpkgs/nixos>' -I nixos-config=./configuration.nix config.system.build.kexec_tarball

#####
# Test connection and prepare
#####

if ! ${ssh} echo Connection successful; then
	echo "Connection cannot be established"
	exit 1
fi

${ssh} apt install rsync || :
${ssh} mkdir -p /nix /tmp
${ssh} mount -t tmpfs tmpfs /tmp
${ssh} mkdir -p /tmp/work /tmp/nix

# Copy and extract
rsync -P result/tarball/*.xz "${connectTo}:/tmp/emergency.tar.xz"
${ssh} tar xf /tmp/emergency.tar.xz -C /tmp
# Overlay the second /nix
${ssh} mount -t overlay overlay -o lowerdir=/nix,upperdir=/tmp/nix,workdir=/tmp/work /nix
# Here goes nothing
${ssh} /tmp/kexec
${ssh} -O exit

#####
# Wait for SSH to be available again
#####

sleep 10 # Ensure the old system is already shut down
echo -n "Attempting to connect..."
while ! ${ssh} echo Connection successful; do
	sleep 5
	echo -n "."
done
echo
